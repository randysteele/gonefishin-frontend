{"ast":null,"code":"var _jsxFileName = \"/Users/randysteele/gone-fishin/gone-fishin-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'; // import * as serviceWorker from './serviceWorker';\n// import 'semantic-ui-css/semantic.css'\n\nimport { Provider } from 'react-redux';\nimport destinations from './reducers/destinations';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(destinations, composeEnhancer(applyMiddleware(thunk)));\nfetch('https://test.cors.workers.dev/?https://httpbin.org/post', {\n  method: 'post',\n  headers: {\n    'x-foo': 'bar',\n    'x-bar': 'foo',\n    'x-cors-headers': JSON.stringify({\n      // allows to send forbidden headers\n      // https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name\n      'cookies': 'x=123'\n    })\n  }\n}).then(res => {\n  // allows to read all headers (even forbidden headers like set-cookies)\n  const headers = JSON.parse(res.headers.get('cors-received-headers'));\n  console.log(headers);\n  return res.json();\n}).then(console.log);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 1\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/randysteele/gone-fishin/gone-fishin-frontend/src/index.js"],"names":["React","ReactDOM","App","Provider","destinations","thunk","createStore","applyMiddleware","compose","BrowserRouter","Router","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","fetch","method","headers","JSON","stringify","then","res","parse","get","console","log","json","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB,C,CACA;AACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAqD,OAArD;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AAGA,MAAMC,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CL,OAAvE;AAEA,MAAMM,KAAK,GAAGR,WAAW,CAACF,YAAD,EAAeO,eAAe,CAACJ,eAAe,CAACF,KAAD,CAAhB,CAA9B,CAAzB;AAGAU,KAAK,CAAC,yDAAD,EAA4D;AAC/DC,EAAAA,MAAM,EAAE,MADuD;AAE/DC,EAAAA,OAAO,EAAE;AACP,aAAS,KADF;AAEP,aAAS,KAFF;AAGP,sBAAkBC,IAAI,CAACC,SAAL,CAAe;AAC/B;AACA;AACA,iBAAW;AAHoB,KAAf;AAHX;AAFsD,CAA5D,CAAL,CAWGC,IAXH,CAWQC,GAAG,IAAI;AACb;AACA,QAAMJ,OAAO,GAAGC,IAAI,CAACI,KAAL,CAAWD,GAAG,CAACJ,OAAJ,CAAYM,GAAZ,CAAgB,uBAAhB,CAAX,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACA,SAAOI,GAAG,CAACK,IAAJ,EAAP;AACD,CAhBD,EAgBGN,IAhBH,CAgBQI,OAAO,CAACC,GAhBhB;AAkBAxB,QAAQ,CAAC0B,MAAT,eACA,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADA,CADA,EAMAc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANA,E,CASA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n// import 'semantic-ui-css/semantic.css'\nimport { Provider } from 'react-redux';\nimport destinations from './reducers/destinations'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose} from 'redux'\nimport {BrowserRouter as Router} from 'react-router-dom'\n\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(destinations, composeEnhancer(applyMiddleware(thunk)))\n\n\nfetch('https://test.cors.workers.dev/?https://httpbin.org/post', {\n  method: 'post',\n  headers: {\n    'x-foo': 'bar',\n    'x-bar': 'foo',\n    'x-cors-headers': JSON.stringify({\n      // allows to send forbidden headers\n      // https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name\n      'cookies': 'x=123'\n    }) \n  }\n}).then(res => {\n  // allows to read all headers (even forbidden headers like set-cookies)\n  const headers = JSON.parse(res.headers.get('cors-received-headers'))\n  console.log(headers)\n  return res.json()\n}).then(console.log)\n\nReactDOM.render(\n<Provider store={store}> \n<Router>\n<App />\n</Router>\n</Provider>, \ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n"]},"metadata":{},"sourceType":"module"}